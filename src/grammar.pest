WHITESPACE = _{ (" " | "\n")+ }

Identifier = @{
	("_" | ASCII_ALPHA_LOWER) ~ ("_" | ASCII_ALPHA_LOWER | ASCII_DIGIT)*
	| ("!" | "@" | "#" | "$" | "%" | "^" | "&" | ":" | "*" | "+" | "-" | "=" | "|" | "/" | "<" | ">" | "?" | "~")+
}

Int = @{ ASCII_DIGIT+ }
Float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
Bin = ${ "0b" ~ ("0" | "1")+ }
Hex = ${ "0x" ~ (ASCII_DIGIT | 'A'..'F')+ }

Chars = {
	!("\"" | "\\") ~ ANY
	| "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
	| "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
Char = ${ "'" ~ Chars ~ "'" }
String = ${ "\"" ~ InnerAttribute ~ "\"" }
	InnerAttribute = @{ Chars* }

IdentifierValue = ${ "`" ~ Identifier ~ "`" }

Program = { SOI ~ Value ~ EOI }
	Value = {
		(Mut | Immut)?
		~ (Affine | Linear | Relevant)?
		~ (
			Use*
			~ (
				Identifier
				| Path
				| Struct
				| Tuple
				| "Once"? ~ Function
				| Expression
			)
			| String
			| Char
			| IdentifierValue
			| Int
			| Float
			| Bin
			| Hex
		)
	}
		Use = { "Use" ~ Value }
		Move = { "Move" ~ Value }
		Mut = { "Mut" }
		Immut = { "Immut" }
		Affine = { "Affine" }
		Linear = { "Linear" }
		Relevant = { "Relevant" }
		Path = { "." ~ (Identifier | Int) ~ ("." ~ (Identifier | Int))+ }
		Struct = { "[" ~ (Identifier ~ "=" ~ Value ~ ",")* ~ Identifier ~ "=" ~ Value ~ ","? ~ "]" }
		Tuple = { "[" ~ Value ~ ((";" ~ Value) | ("," ~ Value)+) ~ "]" }
		Function = { "\\" ~ Identifier ~ Value }
		Expression = { "(" ~ Statement* ~ Value+ ~ ")" }
			Statement = { (Let | Return | Value+) ~ "," }
				Let = { "Let" ~ Identifier ~ ("=" ~ Value)? }
				Return = { "Return " ~ Value }
